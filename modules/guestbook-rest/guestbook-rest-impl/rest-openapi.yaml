info:
  description: "GuestbookRest REST API"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  title: "GuestbookRest"
  version: v1.0
openapi: 3.0.1
paths:
  "/bookdetails":
    get:
      operationId: getBookDetails
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: "The page number to retrieve."
        - in: query
          name: pageSize
          schema:
            type: integer
          description: "The number of items per page."
        - in: query
          name: keywords
          schema:
            type: string
          description: "Search keyword to filter the book details by title, author, or ISBN."
        - in: query
          name: orderByCol
          schema:
            type: string
            enum: [ "title", "author", "isbn" ]
          description: "The column to sort the book details."
        - in: query
          name: orderByType
          schema:
            type: string
            enum: [ "asc", "desc" ]
          description: "The order direction for sorting: ascending or descending."
      responses:
        200:
          description: "Success Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookDetailPage"
            application/xml:
              schema:
                $ref: "#/components/schemas/BookDetailPage"
      tags:
        - "BookDetail"
    post:
      operationId: addBookDetail
      requestBody:
        description: "BookDetail object to add."
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookDetail"
          application/xml:
            schema:
              $ref: "#/components/schemas/BookDetail"
      responses:
        201:
          description: "BookDetail created successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookDetail"
            application/xml:
              schema:
                $ref: "#/components/schemas/BookDetail"
      tags:
        - "BookDetail"
  "/bookdetails/{bookId}":
    put:
      operationId: updateBookDetail
      parameters:
        - in: path
          name: bookId
          required: true
          schema:
            type: integer
            format: int64
          description: "The ID of the BookDetail to update."
      requestBody:
        description: "Updated BookDetail object."
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookDetail"
          application/xml:
            schema:
              $ref: "#/components/schemas/BookDetail"
      responses:
        200:
          description: "BookDetail updated successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookDetail"
            application/xml:
              schema:
                $ref: "#/components/schemas/BookDetail"
      tags:
        - "BookDetail"
    delete:
      operationId: deleteBookDetail
      parameters:
        - in: path
          name: bookId
          required: true
          schema:
            type: integer
            format: int64
          description: "The ID of the BookDetail to delete."
      responses:
        204:
          description: "BookDetail deleted successfully."
      tags:
        - "BookDetail"

  "/borrow-entries/borrow":
    post:
      operationId: borrowBook
      summary: "Borrow a book by adding a BorrowEntry"
      description: "Allows a user to borrow a book. It starts a workflow process."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BorrowEntryRequest"
          application/xml:
            schema:
              $ref: "#/components/schemas/BorrowEntryRequest"
      responses:
        201:
          description: "BorrowEntry created successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BorrowEntry"
            application/xml:
              schema:
                $ref: "#/components/schemas/BorrowEntry"
      tags:
        - "BorrowEntry"

  "/borrow-entries/return":
    post:
      operationId: returnBook
      summary: "Return a Borrowed Book"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReturnBookRequest"
          application/xml:
            schema:
              $ref: "#/components/schemas/ReturnBookRequest"
      responses:
        200:
          description: "BorrowEntry successfully returned."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BorrowEntry"
            application/xml:
              schema:
                $ref: "#/components/schemas/BorrowEntry"
      tags:
        - "BorrowEntry"

components:
  schemas:
    BookDetail:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        author:
          type: string
        isbn:
          type: string
        description:
          type: string
    BookDetailPage:
      type: object
      properties:
        bookDetails:
          type: array
          items:
            $ref: "#/components/schemas/BookDetail"
        totalItems:
          type: integer
        currentPage:
          type: integer
        totalPages:
          type: integer
    BorrowEntry:
      type: object
      properties:
        entryId:
          type: integer
          format: int64
        bookId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        borrowDate:
          type: string
          format: date
        expectedReturnDate:
          type: string
          format: date
        actualReturnDate:
          type: string
          format: date
        status:
          type: string

    BorrowEntryRequest:
      type: object
      properties:
        bookId:
          type: integer
          format: int64
        expectedReturnDate:
          type: string
          format: date
      required:
        - bookId
        - expectedReturnDate

    ReturnBookRequest:
      type: object
      properties:
        bookId:
          type: integer
          format: int64
      required:
        - bookId
